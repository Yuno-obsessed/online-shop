version: '3.9'
services:

  minio:
    image: quay.io/minio/minio:latest
    command: server /data --console-address ":9001"
    env_file:
      - .env
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=wordpass
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
#      interval: 30s
#      timeout: 20s
#      retries: 3
    volumes:
      - /storage/minio:/data
    restart: unless-stopped
  mys:
    image: mysql:8.0
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: zusammen-network
      MYSQL_DATABASE: zusammen
      MYSQL_PASSWORD: zusammen-network
    ports:
      - '3306:3306'
    volumes:
      - mys:/var/lib/mysql
  redis:
    image: redis:latest
    command: redis-server --requirepass wordpass
    expose:
      - "6379"
    volumes:
      - redis-data:/data
      - redis-conf:/usr/local/etc/redis/redis.conf
  migrate:
    restart: on-failure
    image: migrate/migrate
    depends_on:
        mys:
          condition: service_started
    volumes:
      - ./internal/infrastructure/database/migration:/migration
    command:
      [ "-path", "/migration", "-database", "mysql://root:zusammen-network@tcp(mys)/zusammen", "up","1" ]
  app:
#    healthcheck:
#      test: wget --spider http://localhost:8080/healthcheck
#      interval: 1m
    depends_on:
      mys:
        condition: service_started
      redis:
        condition: service_started
      migrate:
        condition: service_completed_successfully
    build:
      dockerfile: Dockerfile
#    volumes:
#      - "app-logs:/logs"
#
#    command:
#        - "-log=/logs/log.txt"
    ports:
      - "8080:8080"
    env_file:
      - .env
volumes:
  mys:
  redis-data:
  redis-conf:
#  app-logs:

  #    healthcheck:
  #      test: "/usr/bin/mysql --user=root --password=zusammen-network --execute \"SHOW DATABASES;\""
  #      interval: 3s
  #      timeout: 1s
  #      retries: 5